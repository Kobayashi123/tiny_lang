/*
   Copyright 2023 Ochiai Daisuke, Kitaoka Tsubasa, Kobayashi Shun,
   KoyamaShuhey, Goda Teruya

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

%{
#include "defs.h"
#define YYSTYPE Cell *
%}
%token  STROKE FILL DISPLAY PERIOD
        RECTANGLE LINE ARC STRING IMAGE
        START END PASS ANGLE SWEEP AT
        COLOR WIDTH INTEGER ATMARK WQUOTED
        RED GREEN BLUE CYAN MAGENTA YELLOW GRAY BLACK WHITE
        UNKNOWN;
%%
Statements
        : Statement
                { $$ = $1; tree($$);}
        | Statements Statement
                { $$ = $2; tree($$);}
Statement
        : DISPLAY STRING StringAttributes PERIOD
                { $$ = node("DISPLAY", $3); }
        | DISPLAY IMAGE ImageAttributes PERIOD
                { $$ = node("DISPLAY", $3); }
        | FILL RECTANGLE RectangleAttributes PERIOD
                { $$ = node("FILL", node("RECTANGLE",$3));}
        | STROKE RECTANGLE RectangleAttributes PERIOD
                { $$ = node("STROKE", node("RECTANGLE",$3));}
        | FILL LINE LineAttributes PERIOD
                { $$ = node("FILL",node("LINE",$3));}
        | STROKE LINE LineAttributes PERIOD
                { $$ = node("STROKE",node("LINE",$3));}
        | FILL ARC ArcAttributes PERIOD
                { $$ = node("FILL",node("ARC",$3));}
        | STROKE ARC ArcAttributes PERIOD
                { $$ = node("STROKE",node("ARC",$3));}

StringAttributes
        : AtPoint Wquoted
                { $$ = node("STRING", cons($1, $2)); }
ImageAttributes
        : AtPoint Wquoted
                { $$ = node("IMAGE", cons($1, $2)); }
RectangleAttributes
        : START Point END Point ColorAndWidth
                { $$ = cons(cons(node("START",$2),node("END",$4)),$5); }
LineAttributes
        : START Point END Point ColorAndWidth
                { $$ = cons(cons(node("START",$2),node("END",$4)),$5); }
        | START Point WayPoint END Point ColorAndWidth
                { $$ = cons(cons(node("START",$2),cons($3,node("END",$5))),$6); }

ArcAttributes
        :START Point END Point ANGLE Integer SWEEP Integer ColorAndWidth
                {$$ = cons(
                        cons(
                                cons(
                                        node("START",$2),
                                        node("END",$4)
                                ),
                                cons(
                                        node("ANGLE",$6),
                                        node("SWEEP",$8)
                                )
                        ),
                        $9);
                }

WayPoint
        :PASS Point
                { $$ = node("PASS",$2);}
        |PASS Point WayPoint
                { $$ = cons(node("PASS",$2),$3);}
Point
        :Integer ATMARK Integer
                { $$ = node("XY", cons($1,$3)); }
AtPoint
        : AT Coordinate
                { $$ = node("AT", $2); }
ColorAndWidth
	: COLOR Colors
        	{ $$ = node("COW", $2); }
	| COLOR Colors WIDTH Integer
                { $$ = node("COW",cons($2,$4)); }
	| WIDTH Integer
        	{ $$ = node("COW", $2); }
	| WIDTH Integer COLOR Colors
                { $$ = node("COW",cons($2,$4)); }
Colors
        :GREEN
                { $$ = leaf("COLOR", yytext); }
        |RED
                { $$ = leaf("COLOR", yytext); }
        |BLUE
                { $$ = leaf("COLOR", yytext); }
        |CYAN
                { $$ = leaf("COLOR", yytext); }
        |MAGENTA
                { $$ = leaf("COLOR", yytext); }
        |YELLOW
                { $$ = leaf("COLOR", yytext); }
        |GRAY
                { $$ = leaf("COLOR", yytext); }
        |BLACK
                { $$ = leaf("COLOR", yytext); }
        |WHITE
                { $$ = leaf("COLOR", yytext); }

Coordinate
        : Integer ATMARK Integer
                { $$ = node("XY", cons($1, $3)); }
Wquoted
        : WQUOTED
                { $$ = leaf("WQUOTED", yytext); }
Integer
        : INTEGER
                { $$ = leaf("INTEGER", yytext); }
%%
#include "lex.yy.c"
void yyerror(char *s) {
	fprintf(stderr, "\n%s at %d: nearby \"%s\"\n\n", s, linecounter, yytext);
	exit(EXIT_FAILURE);
}
